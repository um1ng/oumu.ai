openapi: 3.0.3
info:
  title: AI Transcription Health Check API
  description: API for AI transcription functionality health checking
  version: 1.0.0
  contact:
    name: Oumu.ai Team

servers:
  - url: /api/health-check
    description: Health check API endpoints

paths:
  /run:
    post:
      tags:
        - Health Check
      summary: Run health check
      description: Execute a comprehensive health check of AI transcription services
      operationId: runHealthCheck
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HealthCheckRequest'
      responses:
        '200':
          description: Health check started successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheckResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /status/{checkId}:
    get:
      tags:
        - Health Check
      summary: Get health check status
      description: Retrieve the current status of a running health check
      operationId: getHealthCheckStatus
      parameters:
        - name: checkId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Health check ID
      responses:
        '200':
          description: Health check status retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheckStatus'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /results/{checkId}:
    get:
      tags:
        - Health Check
      summary: Get health check results
      description: Retrieve detailed results of a completed health check
      operationId: getHealthCheckResults
      parameters:
        - name: checkId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Health check ID
      responses:
        '200':
          description: Health check results retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheckResults'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /reports:
    get:
      tags:
        - Health Check
      summary: Get health check reports
      description: Retrieve historical health check reports
      operationId: getHealthCheckReports
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 10
          description: Maximum number of reports to return
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            minimum: 0
            default: 0
          description: Number of reports to skip
        - name: status
          in: query
          required: false
          schema:
            type: string
            enum: [completed, failed, running]
          description: Filter by health check status
      responses:
        '200':
          description: Health check reports retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheckReports'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /services/status:
    get:
      tags:
        - Service Status
      summary: Get service statuses
      description: Retrieve current status of all AI transcription services
      operationId: getServiceStatuses
      responses:
        '200':
          description: Service statuses retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceStatuses'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /config:
    get:
      tags:
        - Configuration
      summary: Get health check configuration
      description: Retrieve current health check configuration
      operationId: getHealthCheckConfig
      responses:
        '200':
          description: Configuration retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheckConfig'
        '500':
          $ref: '#/components/responses/InternalServerError'

    put:
      tags:
        - Configuration
      summary: Update health check configuration
      description: Update health check configuration settings
      operationId: updateHealthCheckConfig
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HealthCheckConfig'
      responses:
        '200':
          description: Configuration updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheckConfig'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /test/transcription:
    post:
      tags:
        - Testing
      summary: Test transcription functionality
      description: Test transcription with provided audio file or use default test audio
      operationId: testTranscription
      requestBody:
        required: false
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                audioFile:
                  type: string
                  format: binary
                  description: Audio file to test (optional)
                serviceName:
                  type: string
                  description: AI service to test (optional, tests all if not specified)
      responses:
        '200':
          description: Transcription test completed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TranscriptionTestResult'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'

components:
  schemas:
    HealthCheckRequest:
      type: object
      properties:
        categories:
          type: array
          items:
            type: string
            enum:
              - api-connectivity
              - transcription-test
              - authentication
              - quota-status
              - quality-metrics
              - ui-performance
          description: Specific categories to check (checks all if not specified)
        services:
          type: array
          items:
            type: string
          description: Specific services to check (checks all if not specified)
        parallel:
          type: boolean
          default: true
          description: Run checks in parallel
        verbose:
          type: boolean
          default: false
          description: Enable verbose logging

    HealthCheckResponse:
      type: object
      properties:
        checkId:
          type: string
          format: uuid
          description: Health check ID
        status:
          type: string
          enum: [running, completed, failed]
          description: Health check status
        estimatedDuration:
          type: integer
          description: Estimated duration in seconds
        startedAt:
          type: string
          format: date-time
          description: Start time

    HealthCheckStatus:
      type: object
      properties:
        checkId:
          type: string
          format: uuid
        status:
          type: string
          enum: [running, completed, failed]
        progress:
          type: object
          properties:
            completed:
              type: integer
            total:
              type: integer
            percentage:
              type: number
              minimum: 0
              maximum: 100
        currentTask:
          type: string
        startedAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        estimatedRemaining:
          type: integer
          description: Estimated remaining time in seconds

    HealthCheckResults:
      type: object
      properties:
        checkId:
          type: string
          format: uuid
        status:
          type: string
          enum: [running, completed, failed]
        duration:
          type: integer
          description: Duration in milliseconds
        summary:
          $ref: '#/components/schemas/HealthCheckSummary'
        results:
          type: array
          items:
            $ref: '#/components/schemas/HealthCheckResult'
        metadata:
          $ref: '#/components/schemas/CheckMetadata'

    HealthCheckSummary:
      type: object
      properties:
        totalChecks:
          type: integer
        passedChecks:
          type: integer
        failedChecks:
          type: integer
        warningChecks:
          type: integer
        overallStatus:
          type: string
          enum: [healthy, degraded, unhealthy]
        score:
          type: number
          minimum: 0
          maximum: 100
        recommendations:
          type: array
          items:
            type: string
        criticalIssues:
          type: array
          items:
            type: string

    HealthCheckResult:
      type: object
      properties:
        id:
          type: string
          format: uuid
        category:
          type: string
          enum:
            - api-connectivity
            - transcription-test
            - authentication
            - quota-status
            - quality-metrics
            - ui-performance
        serviceName:
          type: string
        status:
          type: string
          enum: [pass, fail, warning]
        metrics:
          $ref: '#/components/schemas/PerformanceMetrics'
        error:
          $ref: '#/components/schemas/ErrorInfo'
        details:
          type: object
          additionalProperties: true
        timestamp:
          type: string
          format: date-time

    PerformanceMetrics:
      type: object
      properties:
        responseTime:
          type: integer
          description: Response time in milliseconds
        uploadTime:
          type: integer
          description: Upload time in milliseconds
        processingTime:
          type: integer
          description: Processing time in milliseconds
        downloadTime:
          type: integer
          description: Download time in milliseconds
        totalTime:
          type: integer
          description: Total time in milliseconds
        accuracy:
          type: number
          minimum: 0
          maximum: 100
          description: Accuracy percentage (0-100)
        memoryUsage:
          type: number
          description: Memory usage in MB
        networkLatency:
          type: integer
          description: Network latency in milliseconds
        successRate:
          type: number
          minimum: 0
          maximum: 100
          description: Success rate percentage (0-100)
        throughput:
          type: number
          description: Operations per second

    ErrorInfo:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
        type:
          type: string
          enum:
            - network
            - authentication
            - quota-exceeded
            - service-error
            - format-unsupported
            - timeout
            - unknown
        severity:
          type: string
          enum: [low, medium, high, critical]
        suggestions:
          type: array
          items:
            type: string
        timestamp:
          type: string
          format: date-time
        context:
          type: object
          additionalProperties: true

    CheckMetadata:
      type: object
      properties:
        browser:
          $ref: '#/components/schemas/BrowserInfo'
        network:
          $ref: '#/components/schemas/NetworkInfo'
        audioTestFile:
          $ref: '#/components/schemas/AudioTestInfo'
        configuration:
          $ref: '#/components/schemas/CheckConfig'
        version:
          type: string

    BrowserInfo:
      type: object
      properties:
        name:
          type: string
        version:
          type: string
        platform:
          type: string
        language:
          type: string
        cookieEnabled:
          type: boolean

    NetworkInfo:
      type: object
      properties:
        connectionType:
          type: string
        effectiveType:
          type: string
        downlink:
          type: number
        rtt:
          type: integer
        saveData:
          type: boolean

    AudioTestInfo:
      type: object
      properties:
        filename:
          type: string
        format:
          type: string
        duration:
          type: number
        size:
          type: integer
        sampleRate:
          type: integer
        channels:
          type: integer

    CheckConfig:
      type: object
      properties:
        timeout:
          type: integer
          description: Timeout in milliseconds
        retryAttempts:
          type: integer
          minimum: 0
          maximum: 5
        parallelChecks:
          type: boolean
        verboseLogging:
          type: boolean
        testAudioSize:
          type: integer
          description: Test audio size in bytes

    HealthCheckReports:
      type: object
      properties:
        reports:
          type: array
          items:
            $ref: '#/components/schemas/HealthCheckReport'
        pagination:
          $ref: '#/components/schemas/Pagination'

    HealthCheckReport:
      type: object
      properties:
        checkId:
          type: string
          format: uuid
        timestamp:
          type: string
          format: date-time
        status:
          type: string
          enum: [completed, failed, running]
        duration:
          type: integer
        summary:
          $ref: '#/components/schemas/HealthCheckSummary'

    Pagination:
      type: object
      properties:
        limit:
          type: integer
        offset:
          type: integer
        total:
          type: integer
        hasMore:
          type: boolean

    ServiceStatuses:
      type: object
      properties:
        services:
          type: array
          items:
            $ref: '#/components/schemas/ServiceStatus'
        lastUpdated:
          type: string
          format: date-time

    ServiceStatus:
      type: object
      properties:
        serviceName:
          type: string
        isOnline:
          type: boolean
        lastCheck:
          type: string
          format: date-time
        responseTime:
          type: integer
        availability:
          type: number
          minimum: 0
          maximum: 100
        quotaInfo:
          $ref: '#/components/schemas/QuotaInfo'
        capabilities:
          type: array
          items:
            type: string
        error:
          $ref: '#/components/schemas/ErrorInfo'

    QuotaInfo:
      type: object
      properties:
        current:
          type: integer
        limit:
          type: integer
        resetTime:
          type: string
          format: date-time
        unit:
          type: string
          enum: [requests, tokens, minutes, bytes]
        percentage:
          type: number
          minimum: 0
          maximum: 100
        warnings:
          type: array
          items:
            $ref: '#/components/schemas/QuotaWarning'

    QuotaWarning:
      type: object
      properties:
        threshold:
          type: number
        message:
          type: string
        acknowledged:
          type: boolean

    HealthCheckConfig:
      type: object
      properties:
        timeout:
          type: integer
          description: Timeout in milliseconds
        retryAttempts:
          type: integer
          minimum: 0
          maximum: 5
        parallelChecks:
          type: boolean
        verboseLogging:
          type: boolean
        testAudioSize:
          type: integer
          description: Test audio size in bytes
        enabledCategories:
          type: array
          items:
            type: string
            enum:
              - api-connectivity
              - transcription-test
              - authentication
              - quota-status
              - quality-metrics
              - ui-performance
        enabledServices:
          type: array
          items:
            type: string

    TranscriptionTestResult:
      type: object
      properties:
        testId:
          type: string
          format: uuid
        serviceName:
          type: string
        status:
          type: string
          enum: [success, failed, timeout]
        transcription:
          type: string
        confidence:
          type: number
          minimum: 0
          maximum: 100
        language:
          type: string
        processingTime:
          type: integer
        metrics:
          $ref: '#/components/schemas/PerformanceMetrics'
        error:
          $ref: '#/components/schemas/ErrorInfo'
        timestamp:
          type: string
          format: date-time

  responses:
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
              message:
                type: string
              details:
                type: object
                additionalProperties: true

    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
              message:
                type: string

    InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
              message:
                type: string
              timestamp:
                type: string
                format: date-time

tags:
  - name: Health Check
    description: Health check operations
  - name: Service Status
    description: Service status monitoring
  - name: Configuration
    description: Configuration management
  - name: Testing
    description: Transcription testing